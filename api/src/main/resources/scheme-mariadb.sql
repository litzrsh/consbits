CREATE TABLE IF NOT EXISTS APP_BASE
(
    APP_ID          VARCHAR(100)                 NOT NULL COMMENT '애플리케이션 ID',
    APP_PUSH_TOKEN  VARCHAR(2048) COMMENT '푸시 토큰',
    ALLOW_PUSH_YN   CHAR(1) COMMENT '푸시 허용 여부',
    ALLOW_PUSH_DTTM DATETIME COMMENT '푸시 허용 일시',
    USER_ID         VARCHAR(20) COMMENT '사용자 ID',
    REGIST_DTTM     DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID       VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM       DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID         VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT APP_BASE_PK PRIMARY KEY (APP_ID)
) COMMENT '애플리케이션';

CREATE TABLE IF NOT EXISTS AUTH_BASE
(
    AUTH_ID     VARCHAR(20)                  NOT NULL COMMENT '권한 ID',
    TYPE_CD     VARCHAR(10)                  NOT NULL COMMENT '권한 유형 코드',
    AUTH_NM     VARCHAR(100) COMMENT '권한 이름',
    AUTH_DC     VARCHAR(2000) COMMENT '권한 설명',
    USE_YN      CHAR(1) COMMENT '사용 여부',
    REGIST_DTTM DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID   VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM   DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID     VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT AUTH_BASE_PK PRIMARY KEY (AUTH_ID)
) COMMENT '권한';

CREATE TABLE IF NOT EXISTS AUTH_MENU
(
    AUTH_ID     VARCHAR(20)                  NOT NULL COMMENT '권한 ID',
    MENU_ID     VARCHAR(20)                  NOT NULL COMMENT '메뉴 ID',
    AUTH_VAL    INTEGER                      NOT NULL COMMENT '메뉴 권한 값',
    REGIST_DTTM DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID   VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM   DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID     VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT AUTH_MENU_PK PRIMARY KEY (AUTH_ID, MENU_ID)
) COMMENT '권한 메뉴';

CREATE TABLE IF NOT EXISTS CODE_BASE
(
    CODE_ID       VARCHAR(20)                  NOT NULL COMMENT '코드 ID',
    CODE_UPPER_ID VARCHAR(20) COMMENT '코드 상위 ID',
    CODE_VAL      VARCHAR(10)                  NOT NULL COMMENT '코드 값',
    CODE_NM       VARCHAR(100)                 NOT NULL COMMENT '코드 이름',
    CODE_DC       VARCHAR(2000) COMMENT '코드 설명',
    CODE_DATA     LONGTEXT COMMENT '코드 데이터',
    USE_YN        CHAR(1) COMMENT '사용 여부',
    SORT_SEQ      INTEGER COMMENT '정렬 순번',
    CODE_LVL      INTEGER COMMENT '코드 레벨',
    CODE_PATH     VARCHAR(2000) COMMENT '코드 경로',
    REGIST_DTTM   DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID     VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM     DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID       VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT CODE_BASE_PK PRIMARY KEY (CODE_ID)
) COMMENT '코드';

CREATE TABLE IF NOT EXISTS MENU_BASE
(
    MENU_ID       VARCHAR(20)                  NOT NULL COMMENT '메뉴 ID',
    MENU_UPPER_ID VARCHAR(20) COMMENT '메뉴 상위 ID',
    TYPE_CD       VARCHAR(10)                  NOT NULL COMMENT '메뉴 유형 코드',
    MENU_NM       VARCHAR(100) COMMENT '메뉴 이름',
    MENU_NM_SHORT VARCHAR(50) COMMENT '메뉴 이름 (단축)',
    MENU_DC       VARCHAR(2000) COMMENT '메뉴 설명',
    MENU_LINK     VARCHAR(200) COMMENT '메뉴 링크',
    MENU_ICO      VARCHAR(100) COMMENT '메뉴 아이콘',
    SORT_SEQ      INTEGER COMMENT '정렬 순번',
    USE_YN        CHAR(1) COMMENT '사용 여부',
    DISP_YN       CHAR(1) COMMENT '전시 여부',
    MENU_LVL      INTEGER COMMENT '메뉴 레벨',
    MENU_PATH     VARCHAR(200) COMMENT '메뉴 경로',
    REGIST_DTTM   DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID     VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM     DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID       VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT MENU_BASE_PK PRIMARY KEY (MENU_ID)
) COMMENT '메뉴';

CREATE TABLE IF NOT EXISTS SERIAL_BASE
(
    SERIAL_ID  VARCHAR(20) NOT NULL COMMENT '일련번호 ID',
    SERIAL_VAL INTEGER     NOT NULL COMMENT '일련번호 값',
    UPDT_DTTM  DATETIME    NOT NULL COMMENT '마지막 사용 일시',
    CONSTRAINT SERIAL_BASE_PK PRIMARY KEY (SERIAL_ID)
) COMMENT '일련번호';

CREATE TABLE IF NOT EXISTS SERIAL_MUTEX
(
    SERIAL_ID VARCHAR(20) NOT NULL COMMENT '일련번호 ID',
    CONSTRAINT SERIAL_MUTEX_PK PRIMARY KEY (SERIAL_ID)
) COMMENT '일련번호 뮤텍스';

CREATE TABLE IF NOT EXISTS USER_AUTH
(
    USER_ID     VARCHAR(20)                  NOT NULL COMMENT '사용자 ID',
    AUTH_ID     VARCHAR(20)                  NOT NULL COMMENT '권한 ID',
    REGIST_DTTM DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID   VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM   DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID     VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT USER_AUTH_PK PRIMARY KEY (USER_ID, AUTH_ID)
) COMMENT '사용자 권한';

CREATE TABLE IF NOT EXISTS USER_BASE
(
    USER_ID               VARCHAR(20)                  NOT NULL COMMENT '사용자 ID',
    TYPE_CD               VARCHAR(10)                  NOT NULL COMMENT '사용자 유형 코드',
    LOGIN_ID              VARCHAR(100)                 NOT NULL COMMENT '사용자 로그인 ID',
    LOGIN_PWD             VARCHAR(2048) COMMENT '사용자 로그인 비밀번호',
    USER_NM               VARCHAR(100)                 NOT NULL COMMENT '사용자 이름',
    USER_DC               VARCHAR(2000) COMMENT '사용자 프로필',
    IMG_PATH              VARCHAR(2000) COMMENT '사용자 이미지 URL',
    USER_EMAIL            VARCHAR(100) COMMENT '사용자 이메일주소',
    USER_EMAIL_CERT_YN    CHAR(1) COMMENT '사용자 이메일주소 인증 여부',
    USER_EMAIL_CERT_DTTM  DATETIME COMMENT '사용자 이메일주소 인증 일시',
    USER_MOBILE           VARCHAR(50) COMMENT '사용자 휴대폰번호',
    USER_MOBILE_CERT_YN   CHAR(1) COMMENT '사용자 휴대폰번호 인증 여부',
    USER_MOBILE_CERT_DTTM DATETIME COMMENT '사용자 휴대폰번호 인증 일시',
    STTUS_CD              VARCHAR(10)                  NOT NULL COMMENT '사용자 상태 코드',
    JOIN_DTTM             DATETIME COMMENT '가입 일시',
    JOIN_TYPE_CD          VARCHAR(10) COMMENT '가입 유형 코드',
    JOIN_PATH_CD          VARCHAR(10) COMMENT '가입 경로 코드',
    WHDWL_DTTM            DATETIME COMMENT '탈퇴 일시',
    WHDWL_RSN_CD          VARCHAR(10) COMMENT '탈퇴 사유 코드',
    WHDWL_RSN_CN          VARCHAR(2000) COMMENT '탈퇴 사유 내용',
    LAST_LOGIN_DTTM       DATETIME COMMENT '마지막 로그인 일시',
    LOGIN_FAIL_CNT        INTEGER COMMENT '로그인 실패 횟수',
    LAST_CHG_PWD_DTTM     DATETIME COMMENT '마지막 비밀번호 변경 일시',
    REGIST_DTTM           DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID             VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM             DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID               VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT USER_BASE_PK PRIMARY KEY (USER_ID)
) COMMENT '사용자';

CREATE TABLE IF NOT EXISTS USER_IMAGE
(
    USER_ID     VARCHAR(20)                  NOT NULL COMMENT '사용자 ID',
    FILE_NM     VARCHAR(100)                 NOT NULL COMMENT '파일 이름',
    FILE_SZ     INTEGER                      NOT NULL COMMENT '파일 크기',
    FILE_TYPE   VARCHAR(100) COMMENT '파일 유형 (MIME)',
    FILE_PATH   VARCHAR(200) COMMENT '파일 경로',
    FILE_URL    VARCHAR(2000) COMMENT '파일 URL',
    REGIST_DTTM DATETIME    DEFAULT NOW()    NOT NULL COMMENT '등록일시',
    REGIST_ID   VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '등록자ID',
    UPDT_DTTM   DATETIME    DEFAULT NOW()    NOT NULL COMMENT '수정일시',
    UPDT_ID     VARCHAR(20) DEFAULT 'SYSTEM' NOT NULL COMMENT '수정자ID',
    CONSTRAINT USER_IMAGE_PK PRIMARY KEY (USER_ID)
) COMMENT '사용자 이미지';

CREATE TABLE IF NOT EXISTS SPRING_SESSION
(
    PRIMARY_ID            CHAR(36) NOT NULL,
    SESSION_ID            CHAR(36) NOT NULL,
    CREATION_TIME         BIGINT   NOT NULL,
    LAST_ACCESS_TIME      BIGINT   NOT NULL,
    MAX_INACTIVE_INTERVAL INT      NOT NULL,
    EXPIRY_TIME           BIGINT   NOT NULL,
    PRINCIPAL_NAME        VARCHAR(100),
    CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (PRIMARY_ID)
) ENGINE = InnoDB
  ROW_FORMAT = DYNAMIC;

CREATE UNIQUE INDEX IF NOT EXISTS SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);

CREATE INDEX IF NOT EXISTS SPRING_SESSION_IX2 ON SPRING_SESSION (EXPIRY_TIME);

CREATE INDEX IF NOT EXISTS SPRING_SESSION_IX3 ON SPRING_SESSION (PRINCIPAL_NAME);

CREATE TABLE IF NOT EXISTS SPRING_SESSION_ATTRIBUTES
(
    SESSION_PRIMARY_ID CHAR(36)     NOT NULL,
    ATTRIBUTE_NAME     VARCHAR(200) NOT NULL,
    ATTRIBUTE_BYTES    BLOB         NOT NULL,
    CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_PRIMARY_ID, ATTRIBUTE_NAME),
    CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_PRIMARY_ID) REFERENCES SPRING_SESSION (PRIMARY_ID) ON DELETE CASCADE
) ENGINE = InnoDB
  ROW_FORMAT = DYNAMIC;